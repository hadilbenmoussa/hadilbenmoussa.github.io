# Enhanced workflow for deploying static content to GitHub Pages
name: Deploy portfolio to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master", "main"]
    # Only run if certain files change
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - '**/*.json'
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
      - 'assets/**'
      - 'images/**'
      - 'static/**'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job (optional - useful if you need to process files)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for better caching
      
      - name: Setup Node.js (if needed for build process)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
        if: hashFiles('package.json') != ''
      
      - name: Install dependencies
        run: npm ci
        if: hashFiles('package.json') != ''
      
      - name: Build project
        run: npm run build
        if: hashFiles('package.json') != ''
      
      - name: Optimize images (optional)
        run: |
          # Add image optimization commands here if needed
          echo "Optimizing images..."
        if: false  # Set to true if you want image optimization
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .
            !node_modules
            !.git
            !.github
            !*.log
          retention-days: 1

  # Deploy job
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Create .nojekyll file
        run: touch .nojekyll
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository excluding unnecessary files
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Post-deployment verification
        run: |
          echo "üöÄ Deployment successful!"
          echo "üìç Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "‚è∞ Deployed at: $(date)"
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for details."
